package com.qigan.qiganshop.mapper;

import com.qigan.qiganshop.domain.TbLocalCategory;
import com.qigan.qiganshop.domain.TbLocalCategoryExample;
import com.qigan.qiganshop.pojo.Category;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TbLocalCategoryMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbLocalCategorySqlProvider.class, method="countByExample")
    long countByExample(TbLocalCategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TbLocalCategorySqlProvider.class, method="deleteByExample")
    int deleteByExample(TbLocalCategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @Delete({
        "delete from tb_local_category",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @Insert({
        "insert into tb_local_category (id, type_code, ",
        "type_name, type_sort, ",
        "type_enable, create_date, ",
        "creater, update_date, ",
        "updater)",
        "values (#{id,jdbcType=BIGINT}, #{typeCode,jdbcType=VARCHAR}, ",
        "#{typeName,jdbcType=VARCHAR}, #{typeSort,jdbcType=INTEGER}, ",
        "#{typeEnable,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{creater,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, ",
        "#{updater,jdbcType=VARCHAR})"
    })
    int insert(TbLocalCategory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @InsertProvider(type=TbLocalCategorySqlProvider.class, method="insertSelective")
    int insertSelective(TbLocalCategory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbLocalCategorySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="type_code", property="typeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_name", property="typeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_sort", property="typeSort", jdbcType=JdbcType.INTEGER),
        @Result(column="type_enable", property="typeEnable", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updater", property="updater", jdbcType=JdbcType.VARCHAR)
    })
    List<TbLocalCategory> selectByExample(TbLocalCategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, type_code, type_name, type_sort, type_enable, create_date, creater, update_date, ",
        "updater",
        "from tb_local_category",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="type_code", property="typeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_name", property="typeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_sort", property="typeSort", jdbcType=JdbcType.INTEGER),
        @Result(column="type_enable", property="typeEnable", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updater", property="updater", jdbcType=JdbcType.VARCHAR)
    })
    TbLocalCategory selectByPrimaryKey(Long id);
    
    @Select({
        "select",
        "id as cateId, type_name as cateName, type_sort as sort, ",
        "type_enable as enable, 1 as changeInterface ",
        "from tb_local_category",
        "where type_enable = #{enable}"
    })
    List<Category> selectAll2Category(String enable);
    
    @Select({
        "select",
        "id as cateId, type_name as cateName, type_sort as sort, ",
        "type_enable as enable, 1 as changeInterface ",
        "from tb_local_category"
    })
    List<Category> selectAll2Categorys();
    
    @Select({
        "select",
        "id, type_code, type_name, type_sort, type_enable, create_date, creater, update_date, ",
        "updater",
        "from tb_local_category",
        "where id = #{id,jdbcType=BIGINT} and type_enable = #{enable} "
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="type_code", property="typeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_name", property="typeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_sort", property="typeSort", jdbcType=JdbcType.INTEGER),
        @Result(column="type_enable", property="typeEnable", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="creater", property="creater", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updater", property="updater", jdbcType=JdbcType.VARCHAR)
    })
    TbLocalCategory selectByPrimaryKeyAndEnable(@Param("id") Long id, @Param("enable") String enable);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbLocalCategorySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TbLocalCategory record, @Param("example") TbLocalCategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbLocalCategorySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TbLocalCategory record, @Param("example") TbLocalCategoryExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbLocalCategorySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TbLocalCategory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_local_category
     *
     * @mbg.generated
     */
    @Update({
        "update tb_local_category",
        "set type_code = #{typeCode,jdbcType=VARCHAR},",
          "type_name = #{typeName,jdbcType=VARCHAR},",
          "type_sort = #{typeSort,jdbcType=INTEGER},",
          "type_enable = #{typeEnable,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "creater = #{creater,jdbcType=VARCHAR},",
          "update_date = #{updateDate,jdbcType=TIMESTAMP},",
          "updater = #{updater,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TbLocalCategory record);
}