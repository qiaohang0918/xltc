package com.qigan.qiganshop.mapper;

import com.qigan.qiganshop.domain.TbDeliverInfoModel;
import com.qigan.qiganshop.domain.TbDeliverInfoModelExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TbDeliverInfoModelMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@SelectProvider(type = TbDeliverInfoModelSqlProvider.class, method = "countByExample")
	long countByExample(TbDeliverInfoModelExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@DeleteProvider(type = TbDeliverInfoModelSqlProvider.class, method = "deleteByExample")
	int deleteByExample(TbDeliverInfoModelExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@Delete({ "delete from tb_deliver_info", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@Insert({ "insert into tb_deliver_info (id, order_id_, ", "user_id_, user_name_, ", "dict_type_, dict_name_, ",
			"content, create_date_)", "values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, ",
			"#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, ",
			"#{dictType,jdbcType=VARCHAR}, #{dictName,jdbcType=VARCHAR}, ",
			"#{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})" })
	int insert(TbDeliverInfoModel record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@InsertProvider(type = TbDeliverInfoModelSqlProvider.class, method = "insertSelective")
	int insertSelective(TbDeliverInfoModel record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@SelectProvider(type = TbDeliverInfoModelSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "order_id_", property = "orderId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_id_", property = "userId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_name_", property = "userName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dict_type_", property = "dictType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dict_name_", property = "dictName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR),
			@Result(column = "create_date_", property = "createDate", jdbcType = JdbcType.TIMESTAMP) })
	List<TbDeliverInfoModel> selectByExample(TbDeliverInfoModelExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@Select({ "select", "id, order_id_, user_id_, user_name_, dict_type_, dict_name_, content, create_date_",
			"from tb_deliver_info", "where id = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "order_id_", property = "orderId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_id_", property = "userId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_name_", property = "userName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dict_type_", property = "dictType", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dict_name_", property = "dictName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.VARCHAR),
			@Result(column = "create_date_", property = "createDate", jdbcType = JdbcType.TIMESTAMP) })
	TbDeliverInfoModel selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@UpdateProvider(type = TbDeliverInfoModelSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") TbDeliverInfoModel record,
			@Param("example") TbDeliverInfoModelExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@UpdateProvider(type = TbDeliverInfoModelSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") TbDeliverInfoModel record,
			@Param("example") TbDeliverInfoModelExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@UpdateProvider(type = TbDeliverInfoModelSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(TbDeliverInfoModel record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_deliver_info
	 * @mbg.generated
	 */
	@Update({ "update tb_deliver_info", "set order_id_ = #{orderId,jdbcType=VARCHAR},",
			"user_id_ = #{userId,jdbcType=VARCHAR},", "user_name_ = #{userName,jdbcType=VARCHAR},",
			"dict_type_ = #{dictType,jdbcType=VARCHAR},", "dict_name_ = #{dictName,jdbcType=VARCHAR},",
			"content = #{content,jdbcType=VARCHAR},", "create_date_ = #{createDate,jdbcType=TIMESTAMP}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(TbDeliverInfoModel record);
}