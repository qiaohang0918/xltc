package com.qigan.qiganshop.mapper;

import com.qigan.qiganshop.domain.TbOrderComment;
import com.qigan.qiganshop.domain.TbOrderCommentExample;
import com.qigan.qiganshop.pojo.TbOrderCommentModel;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TbOrderCommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbOrderCommentSqlProvider.class, method="countByExample")
    long countByExample(TbOrderCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TbOrderCommentSqlProvider.class, method="deleteByExample")
    int deleteByExample(TbOrderCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from tb_order_comment",
        "where comment_id = #{commentId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long commentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into tb_order_comment (comment_id, orderId, ",
        "delivery_level, delivery_comment, ",
        "goods_level, goods_comment, ",
        "comment_context, user_phone, ",
        "create_date)",
        "values (#{commentId,jdbcType=BIGINT}, #{orderid,jdbcType=VARCHAR}, ",
        "#{deliveryLevel,jdbcType=DECIMAL}, #{deliveryComment,jdbcType=VARCHAR}, ",
        "#{goodsLevel,jdbcType=DECIMAL}, #{goodsComment,jdbcType=VARCHAR}, ",
        "#{commentContext,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP})"
    })
    int insert(TbOrderComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @InsertProvider(type=TbOrderCommentSqlProvider.class, method="insertSelective")
    int insertSelective(TbOrderComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbOrderCommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="comment_id", property="commentId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="delivery_level", property="deliveryLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="delivery_comment", property="deliveryComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_level", property="goodsLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_comment", property="goodsComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_context", property="commentContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_phone", property="userPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TbOrderComment> selectByExample(TbOrderCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "comment_id, orderId, delivery_level, delivery_comment, goods_level, goods_comment, ",
        "comment_context, user_phone, create_date",
        "from tb_order_comment",
        "where comment_id = #{commentId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="comment_id", property="commentId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="delivery_level", property="deliveryLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="delivery_comment", property="deliveryComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_level", property="goodsLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_comment", property="goodsComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_context", property="commentContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_phone", property="userPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP)
    })
    TbOrderComment selectByPrimaryKey(Long commentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbOrderCommentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TbOrderComment record, @Param("example") TbOrderCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbOrderCommentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TbOrderComment record, @Param("example") TbOrderCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbOrderCommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TbOrderComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order_comment
     *
     * @mbg.generated
     */
    @Update({
        "update tb_order_comment",
        "set orderId = #{orderid,jdbcType=VARCHAR},",
          "delivery_level = #{deliveryLevel,jdbcType=DECIMAL},",
          "delivery_comment = #{deliveryComment,jdbcType=VARCHAR},",
          "goods_level = #{goodsLevel,jdbcType=DECIMAL},",
          "goods_comment = #{goodsComment,jdbcType=VARCHAR},",
          "comment_context = #{commentContext,jdbcType=VARCHAR},",
          "user_phone = #{userPhone,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP}",
        "where comment_id = #{commentId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TbOrderComment record);
    
    @Select({
        "select",
        "comment_id, orderId, delivery_level, delivery_comment, goods_level, goods_comment, ",
        "comment_context, user_phone, create_date",
        "from tb_order_comment",
        "where orderId = #{orderId}"
    })
    @Results({
        @Result(column="comment_id", property="commentId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="delivery_level", property="deliveryLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="delivery_comment", property="deliveryComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_level", property="goodsLevel", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_comment", property="goodsComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_context", property="commentContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_phone", property="userPhone", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP)
    })
    TbOrderComment selectByOrderId(String orderId);
    
    @SelectProvider(type=TbOrderCommentSqlProvider.class, method="selectReport")
    List<TbOrderCommentModel> selectReport(TbOrderCommentModel model);
}