package com.qigan.qiganshop.mapper;

import com.qigan.qiganshop.domain.TbActivityMain;
import com.qigan.qiganshop.domain.TbActivityMainExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TbActivityMainMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbActivityMainSqlProvider.class, method="countByExample")
    long countByExample(TbActivityMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TbActivityMainSqlProvider.class, method="deleteByExample")
    int deleteByExample(TbActivityMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @Delete({
        "delete from tb_activity_main",
        "where act_id = #{actId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long actId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @Insert({
        "insert into tb_activity_main (act_id, act_name, ",
        "act_image, act_status, ",
        "act_sort, act_skip_url, ",
        "create_date)",
        "values (#{actId,jdbcType=BIGINT}, #{actName,jdbcType=VARCHAR}, ",
        "#{actImage,jdbcType=VARCHAR}, #{actStatus,jdbcType=INTEGER}, ",
        "#{actSort,jdbcType=INTEGER}, #{actSkipUrl,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP})"
    })
    int insert(TbActivityMain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @InsertProvider(type=TbActivityMainSqlProvider.class, method="insertSelective")
    int insertSelective(TbActivityMain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @SelectProvider(type=TbActivityMainSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="act_id", property="actId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="act_name", property="actName", jdbcType=JdbcType.VARCHAR),
        @Result(column="act_image", property="actImage", jdbcType=JdbcType.VARCHAR),
        @Result(column="act_status", property="actStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="act_sort", property="actSort", jdbcType=JdbcType.INTEGER),
        @Result(column="act_skip_url", property="actSkipUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TbActivityMain> selectByExample(TbActivityMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "act_id, act_name, act_image, act_status, act_sort, act_skip_url, create_date",
        "from tb_activity_main",
        "where act_id = #{actId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="act_id", property="actId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="act_name", property="actName", jdbcType=JdbcType.VARCHAR),
        @Result(column="act_image", property="actImage", jdbcType=JdbcType.VARCHAR),
        @Result(column="act_status", property="actStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="act_sort", property="actSort", jdbcType=JdbcType.INTEGER),
        @Result(column="act_skip_url", property="actSkipUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP)
    })
    TbActivityMain selectByPrimaryKey(Long actId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbActivityMainSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TbActivityMain record, @Param("example") TbActivityMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbActivityMainSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TbActivityMain record, @Param("example") TbActivityMainExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TbActivityMainSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TbActivityMain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_activity_main
     *
     * @mbg.generated
     */
    @Update({
        "update tb_activity_main",
        "set act_name = #{actName,jdbcType=VARCHAR},",
          "act_image = #{actImage,jdbcType=VARCHAR},",
          "act_status = #{actStatus,jdbcType=INTEGER},",
          "act_sort = #{actSort,jdbcType=INTEGER},",
          "act_skip_url = #{actSkipUrl,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP}",
        "where act_id = #{actId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TbActivityMain record);
}