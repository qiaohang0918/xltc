package com.qigan.qiganshop.controller.backstage;

import com.qigan.qiganshop.controller.utils.RefundController;
import com.qigan.qiganshop.pojo.Manager;
import com.qigan.qiganshop.pojo.TbPresellGoods;
import com.qigan.qiganshop.service.XltcPreSellGoodsService;
import com.qigan.qiganshop.util.notnull.StringNotNull;
import com.qigan.qiganshop.util.result.XltcResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 * @Aurher: QiaoHang
 * @Description:
 * @Data: 2019/10/5 15:20
 * @Modified By:
 */
@RestController
@RequestMapping("/preSellGoods")
public class XltcPreSellGoodsController {


    @Autowired
    private XltcPreSellGoodsService preSellGoodsService;

    /**
     * 添加 预售商品（未启用）
     * @param tbPresellGoods
     * @return
     */
    @RequestMapping(value = "/addPreSellGoods.do",method = RequestMethod.POST)
    public XltcResult addPreSellGoods(@RequestBody TbPresellGoods tbPresellGoods){
        //校验参数
        if(!StringNotNull.check(tbPresellGoods.getNo(),
                tbPresellGoods.getPresellgoodscode(),
                tbPresellGoods.getDuringbefore(),
                tbPresellGoods.getDuringafter())){
            return  XltcResult.error("参数不全：[工号，商品code，起止日期，必传！]");
        }
        //校验权限
        Manager currentManager = RefundController.managerMap.get(tbPresellGoods.getNo());
        if(currentManager==null || !"1".equals(currentManager.getAuthRefund()) ){
            return XltcResult.error("管理员不存在或没有权限");
        }
        //新增
        return preSellGoodsService.addPreSellGoods(tbPresellGoods);
    }


    /**
     * 修改 预售商品信息
     * @param tbPresellGoods
     * @return
     */
    @RequestMapping(value = "/updatePreSellGoods.do",method = RequestMethod.POST)
    public XltcResult updatePreSellGoods(@RequestBody TbPresellGoods tbPresellGoods){
        if(!StringNotNull.check(tbPresellGoods.getNo(),
                tbPresellGoods.getPresellgoodscode()))
            return  XltcResult.error("参数不全：[code , 工号 必传！]");
        //校验权限
        Manager currentManager = RefundController.managerMap.get(tbPresellGoods.getNo());
        if(currentManager==null || !"1".equals(currentManager.getAuthRefund()) ){
            return XltcResult.error("管理员不存在或没有权限");
        }
        //修改
        return preSellGoodsService.updatePreSellGoods(tbPresellGoods);
    }


    /**
     * 查询预售商品
     * @return
     */
    @RequestMapping(value = "/searchPreSellGoods.do",method = RequestMethod.GET)
    public XltcResult searchPreSellGoods(String enabled){
        return preSellGoodsService.searchPreSellGoods(enabled);
    }


}

