package com.qigan.qiganshop.mapper;

import com.qigan.qiganshop.pojo.TbPresellOrder;
import com.qigan.qiganshop.pojo.TbPresellOrderExample;
import java.util.List;
import java.util.Map;

import com.qigan.qiganshop.util.result.XltcResult;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

public interface TbPresellOrderMapper {
    int countByExample(TbPresellOrderExample example);

    int deleteByExample(TbPresellOrderExample example);

    int deleteByPrimaryKey(String presellorderid);

    int insert(TbPresellOrder record);

    int insertSelective(TbPresellOrder record);

    List<TbPresellOrder> selectByExample(TbPresellOrderExample example);

    TbPresellOrder selectByPrimaryKey(String presellorderid);

    int updateByExampleSelective(@Param("record") TbPresellOrder record, @Param("example") TbPresellOrderExample example);

    int updateByExample(@Param("record") TbPresellOrder record, @Param("example") TbPresellOrderExample example);

    int updateByPrimaryKeySelective(TbPresellOrder record);

    int updateByPrimaryKey(TbPresellOrder record);

    @Select({"select c.phone,a.*,b.* from tb_presell_order a " ,
            "left join tb_order b on a.preSellOrderId = b.orderId " ,
            "left join tb_user c on b.userId = c.userId" ,
            "where 1=1  ${conditions} "})
    List<Map<String, Object>> findPreSellOrder(@Param("conditions") String conditions);

    @Select({"select a.* from tb_presell_order a " ,
            "left join tb_order b on a.preSellOrderId = b.orderId " ,
            "where a.isPushed = #{isPushed} " ,
            "and a.preSellTime <= #{preSellTime} " ,
            "and b.status = #{status} "})
    List<TbPresellOrder> findCurrentSuitPushOrders(@Param("preSellTime") String preSellTime, @Param("isPushed") String isPushed, @Param("status") String status);

    @Select({"select c.phone,c.nickName,a.receiverAddress,a.payMoney,a.money,a.status,b.* from tb_order a " ,
            "left join tb_order_item b on a.orderId = b.orderId " ,
            "left join tb_user c on c.userId = b.userId " ,
            "where a.orderId = #{orderId} "})
    List<Map<String,Object>> findPreSellOrderDetails(@Param("orderId") String orderId);
}